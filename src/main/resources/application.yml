spring:
  application:
    name: flight-service
  config:
    import: "optional:configserver:"
#    import: "configserver:"
  cloud:
    config:
      uri: http://localhost:6464
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: false
      retry:
        max-attempts: 6
        initial-interval: 1000
        max-interval: 2000
        multiplier: 1.1
  datasource:
    username: user_postgres
    password: 6eEvI63t20
    url: jdbc:postgresql://localhost:5432/flights
#    url: jdbc:postgresql://postgres-travel-booking-system:5432/flights
    hikari:
      maximum-pool-size: 5
      connection-timeout: 2000
  liquibase:
    change-log: classpath:/db/changelog/db.changelog-master.yml
  #  sql:
#    init:
#      mode: always
  lifecycle:
    timeout-per-shutdown-phase: 15s
  jpa:
    hibernate:
      ddl-auto: validate
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${JWT_ISSUER_URI:http://localhost:4455/realms/travel-booking-system}


application:
  environment: Local

management:
  endpoints:
    web:
      exposure:
        include: refresh

server:
  port: 8899
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      min-spare: 5
      max: 50
  shutdown: graceful